<Page
    x:Class="Hosts.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="using:CommunityToolkit.WinUI.UI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:Hosts.Helpers"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:local="using:Hosts.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:Hosts.Models"
    x:Name="Page"
    Loaded="Page_Loaded"
    mc:Ignorable="d">
    <i:Interaction.Behaviors>
        <ic:EventTriggerBehavior EventName="Loaded">
            <ic:InvokeCommandAction Command="{x:Bind ViewModel.ReadHostsCommand}" />
        </ic:EventTriggerBehavior>
    </i:Interaction.Behaviors>

    <Page.Resources>
        <converters:StringVisibilityConverter
            x:Key="StringVisibilityConverter"
            EmptyValue="Collapsed"
            NotEmptyValue="Visible" />
        <converters:BoolNegationConverter x:Key="BoolNegationConverter" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="64" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid>
            <Button
                x:Uid="AddEntryBtn"
                Height="36"
                Margin="16,0,0,0"
                Command="{x:Bind NewDialogCommand}">
                <StackPanel
                    Orientation="Horizontal"
                    Spacing="12">
                    <TextBlock
                        x:Name="Icon"
                        Margin="0,0,0,0"
                        VerticalAlignment="Center"
                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                        FontSize="16"
                        Foreground="{ThemeResource AccentTextFillColorPrimaryBrush}"
                        Text="&#xe710;" />
                    <TextBlock x:Uid="AddEntry" />
                </StackPanel>
            </Button>

            <StackPanel
                Padding="0,0,16,0"
                HorizontalAlignment="Right"
                Orientation="Horizontal">
                <Button
                    x:Uid="AdditionalLinesBtn"
                    Height="36"
                    Command="{x:Bind AdditionalLinesDialogCommand}"
                    Style="{StaticResource SubtleButtonStyle}">
                    <FontIcon
                        FontFamily="{StaticResource SymbolThemeFontFamily}"
                        FontSize="14"
                        Glyph="&#xe8a5;" />
                </Button>

                <Button
                    x:Uid="FilterBtn"
                    Height="36"
                    Style="{StaticResource SubtleButtonStyle}">
                    <FontIcon
                        FontFamily="{StaticResource SymbolThemeFontFamily}"
                        FontSize="14"
                        Glyph="&#xe71c;" />
                    <Button.Flyout>
                        <Flyout>
                            <StackPanel
                                Width="320"
                                HorizontalAlignment="Stretch"
                                Spacing="12">
                                <AutoSuggestBox
                                    x:Uid="AddressFilter"
                                    PlaceholderText=""
                                    QueryIcon="Find"
                                    Text="{x:Bind ViewModel.AddressFilter, Mode=TwoWay}">
                                    <i:Interaction.Behaviors>
                                        <ic:EventTriggerBehavior EventName="TextChanged">
                                            <ic:InvokeCommandAction Command="{x:Bind ViewModel.ApplyFiltersCommand}" />
                                        </ic:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </AutoSuggestBox>
                                <AutoSuggestBox
                                    x:Uid="HostsFilter"
                                    QueryIcon="Find"
                                    Text="{x:Bind ViewModel.HostsFilter, Mode=TwoWay}">
                                    <i:Interaction.Behaviors>
                                        <ic:EventTriggerBehavior EventName="TextChanged">
                                            <ic:InvokeCommandAction Command="{x:Bind ViewModel.ApplyFiltersCommand}" />
                                        </ic:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </AutoSuggestBox>
                                <AutoSuggestBox
                                    x:Uid="CommentFilter"
                                    QueryIcon="Find"
                                    Text="{x:Bind ViewModel.CommentFilter, Mode=TwoWay}">
                                    <i:Interaction.Behaviors>
                                        <ic:EventTriggerBehavior EventName="TextChanged">
                                            <ic:InvokeCommandAction Command="{x:Bind ViewModel.ApplyFiltersCommand}" />
                                        </ic:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </AutoSuggestBox>
                                <ToggleSwitch
                                    x:Uid="ShowOnlyDuplicates"
                                    IsOn="{x:Bind ViewModel.ShowOnlyDuplicates, Mode=TwoWay}" />
                                <Button
                                    x:Uid="ClearFiltersBtn"
                                    Margin="0,6,0,0"
                                    HorizontalAlignment="Right"
                                    Command="{x:Bind ViewModel.ClearFiltersCommand}"
                                    Style="{StaticResource AccentButtonStyle}" />
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>

                <Button
                    x:Uid="OpenHostsFileBtn"
                    Height="36"
                    Command="{x:Bind ViewModel.OpenHostsFileCommand}"
                    Style="{StaticResource SubtleButtonStyle}">
                    <FontIcon
                        FontFamily="{StaticResource SymbolThemeFontFamily}"
                        FontSize="14"
                        Glyph="&#xe8a7;" />
                </Button>

                <Button
                    x:Uid="SettingsBtn"
                    Height="36"
                    Command="{x:Bind ViewModel.OpenSettingsCommand}"
                    Style="{StaticResource SubtleButtonStyle}">
                    <FontIcon
                        FontFamily="{StaticResource SymbolThemeFontFamily}"
                        FontSize="14"
                        Glyph="&#xe713;" />
                </Button>
            </StackPanel>
        </Grid>

        <StackPanel
            Grid.Row="2"
            Orientation="Vertical"
            Visibility="Visible">
            <InfoBar
                x:Uid="FileSaveError"
                CornerRadius="0"
                IsOpen="{x:Bind ViewModel.Error, Mode=TwoWay}"
                Severity="Error" />

            <InfoBar
                x:Uid="FileChanged"
                IsOpen="{x:Bind ViewModel.FileChanged, Mode=TwoWay}"
                Severity="Informational">
                <InfoBar.ActionButton>
                    <Button
                        x:Uid="Reload"
                        Command="{x:Bind ViewModel.ReadHostsCommand}" />
                </InfoBar.ActionButton>
            </InfoBar>
        </StackPanel>

        <!--
            https://github.com/microsoft/microsoft-ui-xaml/issues/7690
            AllowDrop="{x:Bind ViewModel.Filtered, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
            CanDragItems="{x:Bind ViewModel.Filtered, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
            CanReorderItems="{x:Bind ViewModel.Filtered, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
        -->
        <ListView
            x:Name="Entries"
            x:Uid="Entries"
            Grid.Row="1"
            Margin="16,8,16,16"
            Background="{ThemeResource LayerFillColorDefaultBrush}"
            BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
            BorderThickness="1"
            CornerRadius="8"
            IsItemClickEnabled="True"
            ItemClick="Entries_ItemClick"
            ItemsSource="{Binding Entries, Mode=TwoWay}"
            SelectedItem="{Binding Selected, Mode=TwoWay}">
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="models:Entry">
                    <Grid
                        AutomationProperties.Name="{x:Bind Address, Mode=OneWay}"
                        Background="Transparent"
                        IsRightTapEnabled="True"
                        RightTapped="Grid_RightTapped">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="300" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <FlyoutBase.AttachedFlyout>
                            <MenuFlyout>
                                <MenuFlyoutItem
                                    x:Uid="Ping"
                                    Click="Ping_Click"
                                    Icon="TwoBars" />
                                <MenuFlyoutItem
                                    x:Uid="MoveUp"
                                    Click="ReorderButtonUp_Click"
                                    IsEnabled="{Binding DataContext.Filtered, ElementName=Page, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE74A;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem
                                    x:Uid="MoveDown"
                                    Click="ReorderButtonDown_Click"
                                    IsEnabled="{Binding DataContext.Filtered, ElementName=Page, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE74B;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutSeparator />
                                <MenuFlyoutItem
                                    x:Uid="Delete"
                                    Click="Delete_Click"
                                    Icon="Delete" />
                            </MenuFlyout>
                        </FlyoutBase.AttachedFlyout>
                        <TextBlock
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            Text="{x:Bind Address, Mode=OneWay}"
                            TextWrapping="Wrap" />
                        <TextBlock
                            Grid.Column="1"
                            VerticalAlignment="Center"
                            Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                            Style="{StaticResource CaptionTextBlockStyle}"
                            Text="{x:Bind helpers:StringHelper.GetHostsWithComment(Hosts, Comment), Mode=OneWay}"
                            TextWrapping="WrapWholeWords" />
                        <ProgressRing
                            Grid.Column="2"
                            Width="20"
                            Height="20"
                            Margin="0,0,8,0"
                            IsActive="{x:Bind Pinging, Mode=OneWay}" />
                        <FontIcon
                            x:Uid="PingIcon"
                            x:Name="PingIcon"
                            Grid.Column="2"
                            Margin="0,0,8,0"
                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                            FontSize="18"
                            Visibility="Collapsed">
                            <i:Interaction.Behaviors>
                                <ic:DataTriggerBehavior
                                    Binding="{x:Bind Ping, Mode=OneWay}"
                                    ComparisonCondition="Equal"
                                    Value="True">
                                    <ic:ChangePropertyAction
                                        PropertyName="Glyph"
                                        TargetObject="{Binding ElementName=PingIcon}"
                                        Value="&#xe8fb;" />
                                    <ic:ChangePropertyAction
                                        PropertyName="Visibility"
                                        TargetObject="{Binding ElementName=PingIcon}"
                                        Value="Visible" />
                                    <ic:ChangePropertyAction
                                        PropertyName="Foreground"
                                        TargetObject="{Binding ElementName=PingIcon}"
                                        Value="{StaticResource SystemFillColorSuccessBrush}" />
                                </ic:DataTriggerBehavior>
                                <ic:DataTriggerBehavior
                                    Binding="{x:Bind Ping, Mode=OneWay}"
                                    ComparisonCondition="Equal"
                                    Value="False">
                                    <ic:ChangePropertyAction
                                        PropertyName="Glyph"
                                        TargetObject="{Binding ElementName=PingIcon}"
                                        Value="&#xe894;" />
                                    <ic:ChangePropertyAction
                                        PropertyName="Visibility"
                                        TargetObject="{Binding ElementName=PingIcon}"
                                        Value="Visible" />
                                    <ic:ChangePropertyAction
                                        PropertyName="Foreground"
                                        TargetObject="{Binding ElementName=PingIcon}"
                                        Value="{StaticResource SystemFillColorCriticalBrush}" />
                                </ic:DataTriggerBehavior>
                                <ic:DataTriggerBehavior
                                    Binding="{x:Bind Ping, Mode=OneWay}"
                                    ComparisonCondition="Equal"
                                    Value="{x:Null}">
                                    <ic:ChangePropertyAction
                                        PropertyName="Visibility"
                                        TargetObject="{Binding ElementName=PingIcon}"
                                        Value="Collapsed" />
                                </ic:DataTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </FontIcon>
                        <FontIcon
                            x:Uid="DuplicateEntryIcon"
                            Grid.Column="3"
                            Margin="0,0,8,0"
                            Foreground="{StaticResource SystemControlErrorTextForegroundBrush}"
                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                            FontSize="18"
                            Glyph="&#xe7BA;"
                            Visibility="{x:Bind Duplicate, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                        <ToggleSwitch
                            x:Uid="ActiveToggle"
                            Grid.Column="4"
                            Width="40"
                            MinWidth="0"
                            HorizontalAlignment="Right"
                            IsOn="{x:Bind Active, Mode=TwoWay}"
                            OffContent=""
                            OnContent="" />
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <ContentDialog
            x:Name="EntryDialog"
            x:Uid="EntryDialog"
            Loaded="ContentDialog_Loaded_ApplyMargin"
            IsPrimaryButtonEnabled="{Binding Valid, Mode=TwoWay}"
            PrimaryButtonStyle="{StaticResource AccentButtonStyle}">
            <ContentDialog.DataContext>
                <models:Entry />
            </ContentDialog.DataContext>
            <ScrollViewer
                HorizontalScrollBarVisibility="Auto"
                HorizontalScrollMode="Auto">
                <StackPanel
                    MinWidth="480"
                    Margin="0,12,0,0"
                    HorizontalAlignment="Stretch"
                    Spacing="24">
                    <TextBox
                        x:Uid="Address"
                        IsSpellCheckEnabled="False"
                        Text="{Binding Address, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox
                        x:Uid="Hosts"
                        IsSpellCheckEnabled="False"
                        Text="{Binding Hosts, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox
                        x:Uid="Comment"
                        IsSpellCheckEnabled="False"
                        Text="{Binding Comment, Mode=TwoWay}" />
                    <ToggleSwitch
                        x:Uid="Active"
                        IsOn="{Binding Active, Mode=TwoWay}"
                        OffContent=""
                        OnContent="" />
                </StackPanel>
            </ScrollViewer>
        </ContentDialog>

        <ContentDialog
            x:Name="DeleteDialog"
            x:Uid="DeleteDialog"
            PrimaryButtonCommand="{x:Bind DeleteCommand}"
            PrimaryButtonStyle="{StaticResource AccentButtonStyle}">
            <TextBlock x:Uid="DeleteDialogAreYouSure" />
        </ContentDialog>

        <ContentDialog
            x:Name="AdditionalLinesDialog"
            x:Uid="AdditionalLinesDialog"
            Loaded="ContentDialog_Loaded_ApplyMargin"
            PrimaryButtonCommand="{x:Bind UpdateAdditionalLinesCommand}"
            PrimaryButtonStyle="{StaticResource AccentButtonStyle}">

            <TextBox
                x:Name="AdditionalLines"
                Height="300"
                MinWidth="480"
                Margin="0,12,0,0"
                HorizontalAlignment="Stretch"
                AcceptsReturn="True"
                ScrollViewer.IsVerticalRailEnabled="True"
                ScrollViewer.VerticalScrollBarVisibility="Visible"
                ScrollViewer.VerticalScrollMode="Enabled"
                TextWrapping="Wrap" />
        </ContentDialog>
    </Grid>
</Page>
